<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
	<!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

	<property name="fileExtensions" value="java, properties, xml"/>

	<!-- Checks that a package-info.java file exists for each package.     -->
	<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->
	<!--<module name="JavadocPackage"/>-->

	<!-- Checks whether files end with a new line.                        -->
	<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
	<module name="NewlineAtEndOfFile"/>

	<!-- Checks that property files contain the same keys.         -->
	<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
	<module name="Translation"/>

	<!-- Checks for Size Violations.                    -->
	<!-- See http://checkstyle.sf.net/config_sizes.html -->

	<!--<module name="FileLength"/>-->

	<!-- Checks for whitespace                               -->
	<!-- See http://checkstyle.sf.net/config_whitespace.html -->
	<module name="FileTabCharacter"/>

	<!-- Miscellaneous other checks.                   -->
	<!-- See http://checkstyle.sf.net/config_misc.html -->

	<!-- No trailing whitespaces -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$"/>
		<property name="minimum" value="0"/>
		<property name="maximum" value="0"/>
		<property name="message" value="Line has trailing spaces."/>
	</module>

	<!-- Only LF line endings -->
	<module name="RegexpMultiline">
		<property name="format" value="(?s:(\r\n|\r).*)"/>
		<property name="message" value="CRLF and CR line endings are prohibited, but this file uses them."/>
	</module>

	<!-- Checks for Headers                                -->
	<!-- See http://checkstyle.sf.net/config_header.html   -->
	<module name="RegexpHeader">
		<property name="headerFile" value="${checkstyle.header.file}"/>
		<property name="fileExtensions" value="java"/>
	</module>

	<module name="SuppressWarningsFilter" />

	<!--<module name="SuppressionFilter">-->
		<!--<property name="file" value="${checkstyle.suppress.file}" />-->
	<!--</module>-->

	<module name="TreeWalker">

		<module name="SuppressWarningsHolder" />

		<!-- Checks for Javadoc comments.                     -->
		<!-- See http://checkstyle.sf.net/config_javadoc.html -->
		<!--<module name="JavadocVariable"/>-->
		<module name="JavadocStyle">
			<property name="checkFirstSentence" value="false"/>
			<property name="endOfSentenceFormat" value="false"/>
		</module>

		<!-- Checks for Naming Conventions.                  -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="ConstantName">
			<property name="format" value="(^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$)|(logger)"/>
		</module>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName">
			<!-- allow underscore in method name for createEdgeDualGraph methods. -->
			<property name="format" value="^([a-z][a-zA-Z0-9])*|(test[a-z][a-zA-Z0-9_]*)$"/>
		</module>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName">
			<property name="format" value="(^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$)|(logger)"/>
		</module>
		<module name="TypeName"/>

		<!-- Checks for imports                              -->
		<!-- See http://checkstyle.sf.net/config_import.html -->
		<!-- <module name="AvoidStarImport"/> -->
		<module name="IllegalImport"/>
		<!-- defaults to sun.* packages -->
		<module name="RedundantImport"/>

		<!-- Checks import order -->
		<!--
			import static java.*
			<blank line>
			import static javax.*
			<blank line>
			import static org.*
			<blank line>
			import static *
			<blank line>
			import static cz.bsc.commons.*
			<blank line>
			import static cz.bsc.g8.*
			<blank line>
			import static cz.bsc.*
			<blank line>
			import java.*
			<blank line>
			import javax.*
			<blank line>
			import org.*
			<blank line>
			import *
			<blank line>
			import cz.bsc.commons.*
			<blank line>
			import cz.bsc.g8.*
			<blank line>
			import cz.bsc.*
		-->
		<module name="ImportOrder">
			<property name="groups" value="java.,javax.,org.,*,cz.bsc.commons.,cz.bsc.g8.,cz.bsc.,cz.bsc.g8.ext."/>
			<property name="ordered" value="true"/>
			<property name="separated" value="true"/>
			<property name="option" value="top"/>
			<property name="sortStaticImportsAlphabetically" value="false"/> <!-- means the same rules for static imports as non static -->
		</module>

		<!-- we check this by pmd + findbugs, this rule has false positives if import is used only for javadoc
		<module name="UnusedImports"/>
		-->

		<!-- Checks for Size Violations.                    -->
		<!-- See http://checkstyle.sf.net/config_sizes.html -->
		<module name="MethodLength">
			<property name="max" value="100"/>
			<property name="countEmpty" value="false"/>
		</module>
		<module name="ParameterNumber">
			<property name="max" value="10"/>
			<property name="tokens" value="METHOD_DEF"/>
		</module>

		<!-- Checks for whitespace                               -->
		<!-- See http://checkstyle.sf.net/config_whitespace.html -->
		<module name="EmptyForIteratorPad"/>
		<module name="GenericWhitespace"/>
		<module name="MethodParamPad"/>
		<!--<module name="OperatorWrap"/>-->
		<module name="ParenPad"/>
		<module name="TypecastParenPad"/>

		<!-- Modifier Checks                                    -->
		<!-- See http://checkstyle.sf.net/config_modifiers.html -->
		<!--<module name="ModifierOrder"/>-->
		<module name="RedundantModifier"/>

		<!-- Checks for blocks. You know, those {}'s         -->
		<!-- See http://checkstyle.sf.net/config_blocks.html -->
		<module name="AvoidNestedBlocks">
			<property name="allowInSwitchCase" value="true"/>
		</module>
		<module name="EmptyBlock"/>
		<!--<module name="LeftCurly"/>-->
		<module name="NeedBraces"/>

		<!-- Checks for common coding problems               -->
		<!-- See http://checkstyle.sf.net/config_coding.html -->
		<!-- <module name="AvoidInlineConditionals"/> -->
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<module name="HiddenField">
			<property name="ignoreSetter" value="true"/>
			<property name="ignoreConstructorParameter" value="true"/>
			<property name="ignoreFormat" value=".+"/>
		</module>
		<module name="IllegalInstantiation"/>
		<module name="InnerAssignment"/>
		<module name="MissingSwitchDefault"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>

		<!-- Checks for class design                         -->
		<!-- See http://checkstyle.sf.net/config_design.html -->
		<!--<module name="DesignForExtension"/>-->
		<module name="FinalClass"/>
		<module name="HideUtilityClassConstructor"/>
		<module name="InterfaceIsType"/>
		<module name="VisibilityModifier">
			<property name="ignoreAnnotationCanonicalNames" value="Autowired"/>
			<property name="protectedAllowed" value="true"/>
		</module>

		<!-- Continuation indent -->
		<module name="Indentation">
			<property name="lineWrappingIndentation" value="8"/>
		</module>

		<!-- Miscellaneous other checks.                   -->
		<!-- See http://checkstyle.sf.net/config_misc.html -->
		<module name="ArrayTypeStyle"/>
		<module name="TodoComment"/>
		<module name="UpperEll"/>

		<!-- right checks but with too much problems, temporary disabled.. maybe sometimes.. someone.. will be so brave to enabled it?? -->
		<!--
        <module name="FinalParameters"/>
        <module name="WhitespaceAround"/>		
        <module name="RightCurly"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="WhitespaceAfter"/>
        -->

		<module name="JavadocMethod">
			<property name="allowMissingPropertyJavadoc" value="true"/>
			<property name="scope" value="protected"/>
			<property name="excludeScope" value="private"/>
			<!-- createEdgeDualGraph method may not need javadoc, createEdgeDualGraph method is annotation with JUnit annotation. -->
			<property name="allowedAnnotations" value="Override,Test,After,Before,AfterClass,BeforeClass"/>
			<property name="ignoreMethodNamesRegex" value="with.+"/>
		</module>

		<module name="LineLength">
			<property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://|@see|HeadURL" />
			<property name="max" value="145"/>
		</module>

		<!--
		<module name="MagicNumber">
			<property name="ignoreNumbers" value="0, 1"/>
			<property name="ignoreFieldDeclaration" value="true"/>
			<property name="ignoreAnnotation" value="true"/>
			<property name="ignoreHashCodeMethod" value="true"/>
		</module>

    	<module name="JavadocType">
			<property name="scope" value="public"/>
		</module>

		
        -->


	</module>

</module>
